{
  "root": true,
  "extends": [
    "eslint:recommended",
    "next/core-web-vitals",
    "prettier",
    "plugin:@typescript-eslint/recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:tailwindcss/recommended",
    "plugin:playwright/recommended",
    "plugin:@tanstack/eslint-plugin-query/recommended"
  ],
  "plugins": ["react", "react-hooks", "prefer-arrow", "simple-import-sort"],
  "overrides": [
    {
      "files": ["*.ts", "*.tsx", "*.js", "*.jsx"],
      "rules": {
        // Sort
        "simple-import-sort/exports": "error",
        "simple-import-sort/imports": [
          "error",
          {
            "groups": [
              // Side effects first e.g. 'server-only'
              ["^\\u0000"],
              // `react`, `next
              ["^(react|next)"],
              // Other npm libraries.
              ["^@?\\w"],
              // Internal packages
              [
                "^~/shared/core",
                "^~/shared/utils",
                "^~/shared/atoms",
                "^~/shared/api",
                "^~/shared/hooks",
                "^~/shared/components",
                "^~/shared/providers"
              ],
              ["^~/shared/testutils"],
              [
                "^(~)(/.*/core|$)",
                "^(~)(/.*/utils|$)",
                "^(~)(/.*/atoms|$)",
                "^(~)(/.*/api|$)",
                "^(~)(/.*/hooks|$)",
                "^(~)(/.*/components|$)",
                "^(~)(/.*/providers|$)"
              ],
              ["^(~)(/.*/testutils|$)"],

              // Parent imports `..`
              ["^\\.\\.(?!/?$)", "^\\.\\./?$"],
              // Other relative imports '.'
              ["^\\./(?=.*/)(?!/?$)", "^\\.(?!/?$)", "^\\./?$"]
            ]
          }
        ],
        // Enforce arrow functions
        "prefer-arrow/prefer-arrow-functions": [
          "error",
          {
            "disallowPrototype": true,
            "singleReturnOnly": true,
            "classPropertiesAllowed": false
          }
        ],
        // Override react defaults
        "react/boolean-prop-naming": [
          "error",
          { "rule": "^(is|has|should)[A-Z]([A-Za-z0-9]?)+" }
        ],
        "react/react-in-jsx-scope": "off",
        "react/function-component-definition": [
          "error",
          {
            "namedComponents": "arrow-function",
            "unnamedComponents": "arrow-function"
          }
        ],
        "react/require-default-props": "off",
        "react/prop-types": "off",
        // Tailwindcss
        "tailwindcss/classnames-order": [
          2,
          {
            "callees": ["cn", "cva", "clsx"]
          }
        ],
        "tailwindcss/no-custom-classname": "off", // Slow perf
        // Playwright
        "playwright/expect-expect": "off",
        // Unused vars
        "no-unused-vars": "off",
        "@typescript-eslint/no-unused-vars": [
          "error",
          {
            "args": "all",
            "argsIgnorePattern": "^_",
            "caughtErrors": "all",
            "caughtErrorsIgnorePattern": "^_",
            "destructuredArrayIgnorePattern": "^_",
            "varsIgnorePattern": "^_",
            "ignoreRestSiblings": true
          }
        ]
      }
    }
  ]
}
